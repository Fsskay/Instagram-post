{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\98014\\\\Desktop\\\\Instagram post\\\\inspost\\\\src\\\\LazyLoad.js\";\nimport React from 'react'; // import './lazyload.css'\n// threshold\n\nconst threshold = [0.01];\n\nclass LazyLoad extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      io: null,\n      refs: null,\n      images: null,\n      loading: true\n    };\n    this.handleonload = this.handleonload.bind(this);\n  }\n\n  UNSAFE_componentWillMount() {\n    var {\n      ImgClassName,\n      src,\n      alt,\n      ImgStyle\n    } = this.props.state;\n    ImgClassName = ImgClassName ? ImgClassName : 'lazyload-img';\n    alt = alt ? alt : 'antd-lazyload';\n    var images = [];\n    var refs = [];\n    const ref = React.createRef();\n    refs.push(ref);\n    images.push( /*#__PURE__*/React.createElement(\"img\", {\n      className: ImgClassName,\n      ref: ref,\n      \"data-src\": src,\n      alt: alt,\n      style: { ...ImgStyle\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }\n    }));\n    this.setState({\n      refs,\n      images\n    });\n  }\n\n  componentDidMount() {\n    const io = new IntersectionObserver(entries => {\n      entries.forEach(item => {\n        if (item.intersectionRatio <= 0) return;\n        var {\n          src\n        } = this.props.state;\n        const {\n          target\n        } = item;\n        var image = new Image();\n        image.src = src;\n\n        image.onload = () => {\n          this.setState({\n            loading: false\n          });\n          target.src = target.dataset.src;\n        };\n      });\n    }, {\n      threshold\n    });\n    this.setState({\n      io\n    });\n  }\n\n  handleonload() {\n    var {\n      io,\n      refs\n    } = this.state;\n    refs.forEach(item => {\n      io.observe(item.current);\n    });\n  }\n\n  render() {\n    var {\n      BoxClassName,\n      width,\n      height,\n      BoxStyle\n    } = this.props.state;\n    BoxClassName = BoxClassName ? BoxClassName : 'lazyload-img-box';\n    var {\n      images\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: BoxClassName,\n      style: {\n        width,\n        height,\n        ...BoxStyle\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }, images, /*#__PURE__*/React.createElement(\"img\", {\n      onError: this.handleonload,\n      src: \"\",\n      alt: \"antd-lazyload\",\n      style: {\n        display: 'none'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default LazyLoad;","map":{"version":3,"sources":["C:/Users/98014/Desktop/Instagram post/inspost/src/LazyLoad.js"],"names":["React","threshold","LazyLoad","Component","constructor","props","state","io","refs","images","loading","handleonload","bind","UNSAFE_componentWillMount","ImgClassName","src","alt","ImgStyle","ref","createRef","push","setState","componentDidMount","IntersectionObserver","entries","forEach","item","intersectionRatio","target","image","Image","onload","dataset","observe","current","render","BoxClassName","width","height","BoxStyle","display"],"mappings":"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","sourcesContent":["import React from 'react'\r\n// import './lazyload.css'\r\n// threshold\r\nconst threshold = [0.01]\r\nclass LazyLoad extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            io: null,\r\n            refs: null,\r\n            images: null,\r\n            loading: true\r\n        }\r\n        this.handleonload = this.handleonload.bind(this)\r\n    }\r\n    UNSAFE_componentWillMount(){\r\n        var {ImgClassName, src, alt, ImgStyle } = this.props.state\r\n        ImgClassName = ImgClassName ? ImgClassName : 'lazyload-img'\r\n        alt = alt ? alt : 'antd-lazyload'\r\n        var images = []\r\n        var refs = []\r\n        const ref = React.createRef()\r\n        refs.push(ref)\r\n        images.push(\r\n            <img className={ImgClassName} ref={ref} data-src={src} alt={alt} style={{...ImgStyle}} />\r\n        )\r\n        this.setState({\r\n            refs,\r\n            images\r\n        })\r\n    }\r\n    componentDidMount(){\r\n        const io = new IntersectionObserver(entries=>{\r\n            entries.forEach(item=>{\r\n                if(item.intersectionRatio <= 0) return\r\n                var { src } = this.props.state\r\n                const { target } = item\r\n                var image = new Image()\r\n                image.src = src\r\n                image.onload = ()=>{\r\n                    this.setState({ loading: false })\r\n                    target.src = target.dataset.src\r\n                }\r\n            })\r\n        },{\r\n            threshold\r\n        })\r\n        this.setState({ io })\r\n    }\r\n    handleonload(){\r\n        var { io, refs } = this.state\r\n        refs.forEach(item=>{\r\n            io.observe(item.current)\r\n        })\r\n    }\r\n    render(){\r\n        var { BoxClassName, width, height, BoxStyle } = this.props.state\r\n        BoxClassName = BoxClassName ? BoxClassName : 'lazyload-img-box'\r\n        var { images } = this.state\r\n        return (\r\n            <div className={BoxClassName} style={{width, height, ...BoxStyle}}>\r\n                {images}\r\n                <img onError={this.handleonload} src='' alt='antd-lazyload' style={{display: 'none'}} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default LazyLoad\r\n"]},"metadata":{},"sourceType":"module"}